---
layout: "aws"
page_title: "AWS: dc_intra_virtual_interface_confirm"
sidebar_current: "docs-aws-resource-dc-intra-virtual-interface-confirm"
description: |-
  Provides a resource to confirm the allocation of a DirectConnect Virtual Interface to be used on a separate account from the one DirectConnect is on.
---

# aws\_dc\_intra_virtual_interface_confirm

  Provides a resource to confirm the allocation of a DirectConnect Virtual Interface to be used on a separate account from the one DirectConnect is on.

## Example Usage

```
resource "aws_dc_intra_virtual_interface_confirm" "vif-confirm" {
  virtual_interface_id = "vif-xyz123"
  virtual_gateway_id = "vgw-xyz123"
  interface_type = "private"
}
```

## Argument Reference

The following arguments are supported:

* `virtual_interface_id` - (Required) The id of the virtual interface that was allocated.
* `interface_type` - (Required) The type of the virtual interface [private,public].
* `virtual_gateway_id` - (Required for interface_type = private ) The vpn gateway id.
* `route_filter_prefixes` - (Required for interface_type = public ) The list with routable cidrs to be filtered.
* `allow_state_down` - (Optional) Accept virtual interface state down as ok, since it can take anywhere from 2-10mins for the interface to become available for traffic (Default: false).


-> **Note:** Following is an example of allocating a private virtual interface and confirming it in one run.

```
# Create a module

variable  "connection_id" {} 
variable  "virtual_interface_name" {}
variable  "asn" {}
variable  "vlan" {}
variable  "auth_key" {}
variable  "amazon_address" {}
variable  "customer_address" {}
variable  "interface_type" {}
variable  "owner_account_id" {}

# Provide the account's credentials that has DirectConnect here
provider "aws" {
  region = "eu-west-1"
}


resource "aws_dc_intra_virtual_interface" "vif" {
  connection_id = "${var.connection_id}"
  virtual_interface_name = "${var.virtual_interface_name}"
  asn = "${var.asn}"
  vlan = "${var.vlan}"
  auth_key = "${var.auth_key}"
  amazon_address = "${var.amazon_address}"
  customer_address = "${var.customer_address}"
  interface_type = "${var.interface_type}"
  owner_account_id = "${var.owner_account_id}"
}


output "vif_id" {
    value = "${aws_dc_intra_virtual_interface.vif.id}"
}
```

```
# Main terraform template


provider "aws" {
  region = "eu-west-1"
}

module "dc_account-vif" {
  source = "modules/dc_account"
  connection_id = "dxcon-xyz123"
  virtual_interface_name = "my-vif"
  asn = "12345"
  vlan = "1024"
  auth_key = "my_super_secret_key"
  amazon_address = "10.218.0.45/30"
  customer_address = "10.218.0.46/30"
  interface_type = "private"
  owner_account_id = "123456789"

}


resource "aws_dc_intra_virtual_interface_confirm" "vif-confirm" {
  virtual_interface_id = "${module.dc_account-vif.vif_id}"
  virtual_gateway_id = "vgw-xyz123"
  interface_type = "private"
}
```

## Attributes Reference

The following attributes are exported:

* `id` - The ID of virtual interface.
* `amazon_address` - The IP address for amazon's interface (when autogenerated).
* `customer_address` - The IP address for your interface (when autogenerated).



